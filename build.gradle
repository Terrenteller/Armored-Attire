plugins {
    id 'java'
    id( "xyz.jpenilla.run-paper" ) version "2.2.0"
}

group = 'com.riintouge'
def paperVersion = "1.20.1-R0.1-SNAPSHOT"
def minecraftVersionMMU = paperVersion.split( "-" )[0]
version = minecraftVersionMMU + "-" + new Date().format( "yyyy.MM.dd" )

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "ProtocolLib"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "NBT API"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:" + paperVersion
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly 'de.tr7zw:item-nbt-api-plugin:2.12.2'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion( minecraftVersionMMU )
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
